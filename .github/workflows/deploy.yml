name: CI/CD - Twenty CRM

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.meta.outputs.tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Set image tag
        id: meta
        run: echo "tag=${GITHUB_SHA}" >> $GITHUB_OUTPUT

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: packages/twenty-docker/twenty/Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ github.repository_owner }}/twenty:${{ steps.meta.outputs.tag }}
            ghcr.io/${{ github.repository_owner }}/twenty:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Add SSH private key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Deploy PROD (crm.ctia.co.za)
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          IMAGE_TAG: ${{ needs.build-and-push.outputs.image_tag }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ssh -o StrictHostKeyChecking=no -p "$SSH_PORT" "$SSH_USER@$SSH_HOST" bash -lc '
            docker login ghcr.io -u "$GITHUB_ACTOR" -p "$GITHUB_TOKEN" &&
            cd /opt/twenty/prod &&
            sed -i "s/^TAG=.*/TAG=$IMAGE_TAG/" .env || true &&
            docker compose -p twenty-crm-prod -f docker-compose.yml -f docker-compose.override.yml --env-file .env pull &&
            docker compose -p twenty-crm-prod -f docker-compose.yml -f docker-compose.override.yml --env-file .env up -d &&
            docker image prune -f
          '


